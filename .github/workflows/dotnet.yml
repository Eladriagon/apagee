name: Release Builder

on:
  workflow_dispatch:
    inputs:
      publishArtifacts:
        description: 'Publish Artifacts'
        required: false
        type: boolean
      tagName:
        description: 'Tag Name'
        required: false
        type: string
      releaseName:
        description: 'Release Name'
        required: false
        type: string
  release:
    types: [released, prereleased]

env:
  PROJ_FILE: Apagee.csproj
  APP_NAME: apagee

permissions:
  contents: write

jobs:
  build:
    name: build (${{ matrix.rid }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            rid: linux-x64
            archive_ext: tar.gz
          - os: windows-latest
            rid: win-x64
            archive_ext: zip
    
    steps:
      - uses: actions/checkout@v5
        name: git checkout
        
      - uses: actions/setup-dotnet@v5
        name: dotnet use 10.x
        with:
          dotnet-version: 10.0.x
          dotnet-quality: 'preview' # todo: remove me in a month or so
      
      - name: dotnet restore
        run: dotnet restore
        
      - name: dotnet build
        run: dotnet build --no-restore
        
      - name: dotnet publish
        if: github.event_name == 'published' || ${{ inputs.publishArtifacts }} == 'true'
        run: >
          dotnet publish ${{ env.PROJ_FILE }}
          -c Release
          -r ${{ matrix.rid }}
          --self-contained true
          -p:PublishSingleFile=true
          -p:IncludeNativeLibrariesForSelfExtract=true
          -p:PublishTrimmed=false
          -p:DebugType=None
          -p:DebugSymbols=false
          -p:AssemblyName=${{ env.APP_NAME }}
          -o publish/${{ matrix.rid }}
          
      - name: chmod executable
        if: matrix.os == 'ubuntu-latest' && (github.event_name == 'published' || ${{ inputs.publishArtifacts }} == 'true')
        run: chmod +x publish/${{ matrix.rid }}/${{ env.APP_NAME }}
        
      - name: zip artifacts
        if: github.event_name == 'published' || ${{ inputs.publishArtifacts }} == 'true'
        shell: bash
        run: |
          mkdir -p dist
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            mkdir -p dist
            pushd publish/${{ matrix.rid }}
            tar -czf "../../dist/${{ env.APP_NAME }}-${{ matrix.rid }}.${{ matrix.archive_ext }}" *
            popd
          else
            powershell -NoProfile -Command "Compress-Archive -Path 'publish/${{ matrix.rid }}/*' -DestinationPath 'dist/${{ env.APP_NAME }}-${{ matrix.rid }}.${{ matrix.archive_ext }}' -Force"
          fi
          
      - name: upload artifacts
        if: github.event_name == 'published' || ${{ inputs.publishArtifacts }} == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-${{ matrix.rid }}
          path: dist/*
          
  release:
    name: release
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'published' || ${{ inputs.publishArtifacts }} == 'true'
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v5
        with:
          path: _artifacts

      - name: Create/Update GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.event.release.name || inputs.releaseName }}
          tag_name: ${{ github.event.release.tag_name || inputs.tagName }}
          generate_release_notes: false
          files: |
            _artifacts/**/*.zip
            _artifacts/**/*.tar.gz
